#! /usr/bin/env atf-sh

SERVER_HOST=localhost
SERVER_PORT=13322
SERVER=${SERVER_HOST}:${SERVER_PORT}

PROXY_HOST=localhost
PROXY_PORT=14433

dummy_request() {
    printf "\
GET http://${SERVER}/ HTTP/1.0\r
Host: ${SERVER}\r
\r
"
}

atf_test_case system1
system1_head() {
    atf_set "require.progs" "grep nc printf proxy wc"
    atf_set "descr" "The proxy reuses a previously bound address"
}
system1_body() {
    nc -l ${SERVER_PORT} &

    proxy -v ${PROXY_PORT} 2> test.out1 &
    dummy_request | nc ${PROXY_HOST} ${PROXY_PORT}

    kill %2 && wait %2

    proxy -v ${PROXY_PORT} 2> test.out2 &
    dummy_request | nc ${PROXY_HOST} ${PROXY_PORT}

    grep -q ${PROXY_PORT} test.out1 \
        || atf_fail "Not listening on requested port in first run"
    grep -q ${PROXY_PORT} test.out2 \
        || atf_fail "Not listening on requested port in second run"
}

atf_test_case system2
system2_head() {
    atf_set "descr" "Connection times out if no request is sent"
    atf_set "require.progs" "grep nc proxy"
    atf_set "timeout" 6
}
system2_body() {
    local flag
    if grep -q ncat $(which nc)
    then
        flag="--recv-only"
    else
        flag=""
    fi

    proxy -v ${PROXY_PORT} &
    nc ${PROXY_HOST} ${PROXY_PORT} ${flag} > /dev/null

    # If the proxy times out the connection before the test times out, we pass.
    atf_pass
}

atf_test_case system3
system3_head() {
    atf_set "descr" "Connection times out if no request is sent"
    atf_set "require.progs" "grep nc printf proxy"
    atf_set "timeout" 6
}
system3_body() {
    local flag
    if grep -q ncat $(which nc)
    then
        flag="--no-shutdown"
    else
        flag="-d"
    fi
    nc -l ${SERVER_PORT} ${flag} &
    proxy -v ${PROXY_PORT} &
    dummy_request | nc ${PROXY_HOST} ${PROXY_PORT}
    # If the proxy times out the connection before the test times out, we pass.
    atf_pass
}

atf_init_test_cases() {
    atf_add_test_case system1
    atf_add_test_case system2
    atf_add_test_case system3
}

# Local Variables:
# mode: sh
# End:
# vim: filetype=sh fileformat=unix
