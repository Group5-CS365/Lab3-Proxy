#! /usr/bin/env atf-sh

SERVER_PORT=2345
PROXY_PORT=5432


base_head() {
    atf_set "require.progs" "nc proxy"
    atf_set "descr" "Tests a given request produces the expected" \
            "request at the server when proxied"
}
base_body() {
    local request proxied
    request=${1:-test.in}
    proxied=${2:-test.ok}
    atf_check -o file:${proxied} nc -l ${SERVER_PORT} &
    proxy -v ${PROXY_PORT} &
    nc localhost ${PROXY_PORT} < ${request}
    kill %1
    kill %2
}

atf_test_case request1
request1_head() {
    base_head
}
request1_body() {
    echo -e "GET http://localhost:${SERVER_PORT}/ HTTP/1.1\r
Host: localhost:${SERVER_PORT}\r
User-Agent: curl/7.54.0\r
Accept: */*\r
Proxy-Connection: Keep-Alive\r
\r
" > test.in

    echo -e "GET / HTTP/1.1\r
Host: localhost:${SERVER_PORT}\r
User-Agent: curl/7.54.0\r
Accept: */*\r
\r
" > test.ok

    base_body
}

atf_test_case request2
request2_head() {
    base_head
}
request2_body() {
    echo -e "GET http://localhost:${SERVER_PORT}/hello HTTP/1.1\r
Host: localhost:${SERVER_PORT}\r
User-Agent: curl/7.54.0\r
Accept: */*\r
Proxy-Connection: Keep-Alive\r
\r
" > test.in

    echo -e "GET /hello HTTP/1.1\r
Host: localhost:${SERVER_PORT}\r
User-Agent: curl/7.54.0\r
Accept: */*\r
\r
" > test.ok

    base_body
}

atf_test_case request3
request3_head() {
    base_head
}
request3_body() {
    echo -e "GET http://blue.cs.sonoma.edu:3333/page_name.html HTTP/1.0\r
Host: blue.cs.sonoma.edu:3333\r
Accept: text/html, text/plain, text/sgml, text/css, application/xhtml+xml, */*;q=0.01\r
Accept-Encoding: gzip, bzip2\r
Accept-Language: en\r
User-Agent: Lynx/2.8.9dev.4 libwww-FM/2.14 SSL-MM/1.4.1 OpenSSL/1.0.1k-fips\r
\r
" > test.in

    echo -e "GET http://blue.cs.sonoma.edu:3333/page_name.html HTTP/1.0\r
Host: blue.cs.sonoma.edu:3333\r
Accept: text/html, text/plain, text/sgml, text/css, application/xhtml+xml, */*;q=0.01\r
Accept-Encoding: gzip, bzip2\r
Accept-Language: en\r
User-Agent: Lynx/2.8.9dev.4 libwww-FM/2.14 SSL-MM/1.4.1 OpenSSL/1.0.1k-fips\r
\r
" > test.ok

    base_body
}

atf_init_test_cases() {
    atf_add_test_case request1
    atf_add_test_case request2
    atf_add_test_case request3
}
